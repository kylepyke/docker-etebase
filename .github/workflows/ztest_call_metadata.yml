---
name: (Test) Metadata Actions for Dispatch Build

on:
  workflow_call:
    inputs:
      flavors:
        description: "Base images"
        default: '[ "base", "slim", "alpine" ]'
        required: false
        type: choice
        options:
          - '[ "base", "slim", "alpine" ]'
          - '[ "base", "slim" ]'
          - '[ "base", "alpine" ]'
          - '[ "slim", "alpine" ]'
          - '[ "base" ]'
          - '[ "slim" ]'
          - '[ "alpine" ]'
      version:
        description: "EteBase Version"
        required: false
        type: string
      platforms:
        description: "Set the platforms to build [ linux/amd64, linux/arm64 or linux/arm/v7 ]"
        default: "linux/amd64,linux/arm64,linux/arm/v7"
        required: false
        type: string
      tag:
        description: "Tag"
        required: false
        type: string
      pushit:
        description: "Should push?"
        default: false
        required: false
        type: boolean

jobs:
  test-prepare-metadata:
    runs-on: ubuntu-latest
    outputs:
      ete_version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout Version and Workflow files
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            server_version
            ./.github/actions/get-server-version
          sparse-checkout-cone-mode: false

      - id: get_version
        name: Get Server Version
        uses: ./.github/actions/get-server-version
        with:
          version: ${{ github.event.inputs.version }}

      - id: show_input
        run: |
          echo '########## inputs ##########'
          echo "flavor: ${{ github.event.inputs.flavors }}"
          echo "version: ${{ github.event.inputs.version }}"
          echo "platforms: ${{ github.event.inputs.platforms }}"
          echo "tag: ${{ github.event.inputs.tag }}"
          echo "pushit: ${{ github.event.inputs.pushit }}"

          echo '########## ete-version ##########'
          echo "ete-version: ${{ steps.get_version.outputs.version }}"

  test-generate-metadata:
    needs: test-prepare-metadata
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ${{ fromJson(github.event.inputs.platforms) }}
        flavor: ${{ fromJson(github.event.inputs.flavors) }}
    steps:
      - id: checkout
        name: Checkout Dockerfiles and Context
        uses: actions/checkout@v4

      - id: process_version
        name: Process Version data
        uses: ./.github/actions/process-version
        with:
          version: ${{ needs.test-prepare-metadata.outputs.ete_version }}

      - id: build_metadata
        name: Prepare Project Metadata
        uses: ./.github/actions/build-metadata
        with:
          flavor: ${{ matrix.flavor }}
          version: ${{ steps.process_version.outputs.version }}

      - id: docker_metadata
        name: Prepare Docker Metadata
        uses: docker/metadata-action@v5.5.1
        with:
          labels: |
            maintainer=victor-rds
            version=${{ steps.build_metadata.outputs.label_version }}
            org.opencontainers.image.authors=Victor R. Santos <victor-rds@users.noreply.github.com>
            org.opencontainers.image.title=Docker Etebase Server
            org.opencontainers.image.base.name=${{ steps.build_metadata.outputs.base_version }}
          images: |
            victorrds/etebase
            victorrds/etesync
          flavor: |
            latest=${{ ( matrix.flavor == 'base' && steps.process_version.outputs.is_semver == 'true' ) }}
            suffix=${{ steps.build_metadata.outputs.suffix }}
          tags: |
            type=edge,enable=${{ inputs.tag != '' }},branch=${{ steps.build_metadata.outputs.source_name }}
            type=raw,value=${{ inputs.tag }},enable=${{ inputs.tag != '' }}
            type=raw,value=${{ matrix.flavor }},suffix=,enable=${{ inputs.tag == '' && steps.process_version.outputs.is_semver == 'true' }}
            type=semver,pattern={{version}},value=${{ steps.process_version.outputs.ete_version }},enable=${{ inputs.tag == '' && steps.process_version.outputs.is_semver == 'true' }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.process_version.outputs.ete_version }},enable=${{ inputs.tag == '' && steps.process_version.outputs.is_semver == 'true' }}

      - name: Metadata Output
        shell: bash
        run: |
          echo '########## server_version ##########'
          echo "flavor: ${{ matrix.flavor }}"
          echo "flavor: ${{ matrix.platform }}"

          echo '########## server_version ##########'
          echo "ete_version: ${{ steps.process_versions.outputs.ete_version }}"
          echo "semver: ${{ steps.process_versions.outputs.is_semver }}"

          echo '########## build_metadata ##########'
          echo "source_name: ${{ steps.build_metadata.outputs.source_name }}"
          echo "suffix: ${{ steps.build_metadata.outputs.suffix }}"
          echo "base_version: ${{ steps.build_metadata.outputs.base_version }}"
          echo "label_version: ${{ steps.build_metadata.outputs.label_version }}"

          echo '########## docker_metadata ##########'
          echo "${{ steps.docker_metadata.outputs.tags }}"
          echo "${{ steps.docker_metadata.outputs.labels }}"