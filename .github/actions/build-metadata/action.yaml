name: "Build Metadata"
description: "Build metada"

inputs:
  flavor:
    description: "Base image"
    required: true
    default: "base"
  version:
    description: "Version"
    default: "master"
    required: false

outputs:
  source_name:
    description: "Source Ref"
    value: ${{ steps.prepare_metadata.outputs.source_ref }}
  suffix:
    description: "Suffix for Docker Tags"
    value: ${{ steps.prepare_metadata.outputs.suffix }}
  base_version:
    description: "Base Docker Image Version"
    value: ${{ steps.prepare_metadata.outputs.base_version }}
  label_version:
    description: "Docker Image Version"
    value: ${{ steps.prepare_metadata.outputs.label_version }}

runs:
  using: "composite"
  steps:
    - id: prepare_metadata
      shell: bash
      env:
        FLAVOR: ${{ inputs.flavor }}
        CLEAN_VERSION: ${{ inputs.version }}
      run: |
        FLAVOR="${FLAVOR:-base}"
        SUFFIX=""
        SOURCE_REF="${GITHUB_REF_NAME}"
        VERSION=${CLEAN_VERSION}

        if [ ! -z "${FLAVOR}" ] && [ "${FLAVOR}" != "base" ]; then
          SUFFIX="-${FLAVOR}"
        fi

        if [ "${GITHUB_REF_TYPE}" == 'branch' ] || [ "${GITHUB_REF_TYPE}" == 'tag' ]; then
          VERSION="${VERSION}-${GITHUB_REF_NAME}"
        else
          declare CLEAR="${GITHUB_REF%/merge}"
          CLEAR="${CLEAR#refs/*/}"

          VERSION="${VERSION}-${CLEAR}"
          SOURCE_REF="master-${CLEAR}"
        fi

        VERSION="${VERSION}${SUFFIX}"

        BASE_VERSION=`grep "FROM python:" tags/${FLAVOR}/Dockerfile | cut -d ' ' -f 2`

        echo "source_ref=${SOURCE_REF}" >> $GITHUB_OUTPUT
        echo "suffix=${SUFFIX}" >> $GITHUB_OUTPUT
        echo "base_version=${BASE_VERSION}" >> $GITHUB_OUTPUT
        echo "label_version=${VERSION}" >> $GITHUB_OUTPUT